import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

/**
 * 公众号：干货食堂
 */
public class Test {

    /**
     * 使用flatMap()将流中的每一个元素连接成为一个流
     * @param args
     */
    public static void main(String[] args) {
        List<User> userList = init();
        //根据年龄排序（升序）
        userList = userList.stream().sorted((u1, u2) -> u1.getAge() - u2.getAge()).collect(Collectors.toList());
        //推荐：userList = userList.stream().sorted(Comparator.comparingInt(User::getAge)).collect(Collectors.toList());
        //降序：userList = userList.stream().sorted(Comparator.comparingInt(User::getAge).reversed()).collect(Collectors.toList());


        //空值排在前面
        //userList = userList.stream().sorted(Comparator.comparing(User::getAge, Comparator.nullsFirst(Integer::compareTo))).collect(Collectors.toList());
        //空值排在后面
        //userList = userList.stream().sorted(Comparator.comparing(User::getAge, Comparator.nullsLast(Integer::compareTo))).collect(Collectors.toList());

        //遍历用户列表
        userList.forEach(System.out::println);
    }

    /**
     * 初始化数据
     */
    public static List<User> init() {
        List<User> userList = new ArrayList<User>();
        userList.add(new User(1, "干货食堂_01", "男", 32, "研发部", BigDecimal.valueOf(1600)));
        userList.add(new User(2, "干货食堂_02", "男", 30, "财务部", BigDecimal.valueOf(1800)));
        userList.add(new User(3, "干货食堂_03", "女", 20, "人事部", BigDecimal.valueOf(1700)));
        userList.add(new User(4, "干货食堂_04", "男", 38, "研发部", BigDecimal.valueOf(1500)));
        userList.add(new User(4, "干货食堂_04", "男", 58, "研发部02", BigDecimal.valueOf(1500)));
        userList.add(new User(5, "干货食堂_05", "女", 25, "财务部", BigDecimal.valueOf(1200)));
        return userList;
    }


    @Data
    @AllArgsConstructor
    @NoArgsConstructor
    public static class User {
        int id;
        String name;
        String sex;
        Integer age;
        String Department;
        BigDecimal Salary;

    }
}
