

import java.math.BigDecimal;
import java.math.RoundingMode;

/**
* @author: 公众号:干货食堂
* @Description  注意：如果你想除法的时候自定义保留小数点后几位  需要这样写
*/
public class Test2 {

    /**
     * BigDecimal.divide(BigDecimal divisor, int scale, RoundingMode roundingMode) ;
     * ROUND_CEILING:舍位时往正无穷方向移动
     * 正数：1.1 -> 2   1.5-> 2   1.8-> 2
     * 负数：-1.1-> -1   -1.5-> -1   -1.8-> -1
     *
     * ROUND_DOWN:向0的方向移动
     * 正数：1.1-> 1   1.5-> 1   1.8-> 1
     * 负数：-1.1-> -1   -1.5-> -1   -1.8> -1
     *
     * ROUND_FLOOR:与CEILING相反，往负无穷
     * 正数: 1.1-> 1   1.5-> 1   1.8-> 1
     * 负数: -1.1-> -2   -1.5-> -2   -1.8-> -2
     *
     * ROUND_HALF_DOWN:以5为分界线，或曰五舍六入
     * 正数：1.5-> 1   1.6-> 2
     * 负数：-1.5-> -1   -1.6-> -2
     *
     * ROUND_HALF_EVEN:同样以5为分界线，如果是5，则前一位变偶数
     * 1.15-> 1.2   1.16-> 1.2   1.25-> 1.2   1.26-> 1.3
     *
     * ROUND_HALF_UP:最常见的四舍五入
     *
     * ROUND_UNNECESSARY:无需舍位
     *
     * ROUND_UP与ROUND_DOWN相反，远离0的方向
     * 正数：1.1-> 2   1.5-> 2   1.8-> 2
     * 负数：-1.1-> -2   -1.5-> -2   -1.8-> -2
     */
    public static void main(String[] args) throws Exception {
        BigDecimal totalAmount = new BigDecimal("19.09");
        BigDecimal size = new BigDecimal(10);
        BigDecimal divide = totalAmount.divide(size,1, RoundingMode.FLOOR);
        System.out.println(divide);
    }
}
